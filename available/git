# write a function to compute the current git branch
parse_git_branch() {
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
}
 
shorten_path(){
   x=${1}
   len=${#x}
   max_len=$2
  
   if [ $len -gt $max_len ]
   then
       pos=()
       for ((i=0;i<len;i++))
       do
           if [ "${x:i:1}" == "/" ]
           then
               pos=(${pos[@]} $i)
           fi
       done
       pos=(${pos[@]} $len)
 
       i=0
       while [ $((len-pos[i])) -gt $((max_len-3)) ]
       do
           i=$((i+1))
       done
 
       if [ ${pos[i]} == 0 ]
       then
           echo ${x}
 
       elif [ ${pos[i]} == $len ]
       then
           echo ...${x:((len-max_len+3))}
       else
           echo ...${x:pos[i]}
       fi
   else
       echo ${x}
   fi
}
 
PS1='$([ $? -ne 0 ] && echo -e "\[\033[01;31m\]:[\[\e[0m\]" || echo -e "\[\033[01;32m\]:]\[\e[0m\]") \[\033[1;35m\]\u@\h\[\033[1;34m\] $(shorten_path "${PWD}" 50)\[\033[1;36m\]$(parse_git_branch) \[\033[1;34m\]:\[\033[0m\] '

